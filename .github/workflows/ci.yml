name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - master

jobs:
  test-and-deploy-to-test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Kotlin
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install dependencies
        run: ./gradlew clean build

      - name: Run tests
        run: ./gradlew test

      - name: Deploy to GitHub Pages (test)
        if: success()
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git checkout -b gh-pages
          ./gradlew publish # 這裡假設你有一個 publish 任務來處理部署
          git push -f origin gh-pages:test

      - name: Create PR to master
        if: success()
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          title: 'Merge develop into master'
          body: 'Auto-generated PR to merge changes from develop to master.'

  deploy-to-master:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/master'

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Kotlin
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install dependencies
        run: ./gradlew clean build

      - name: Deploy to GitHub Pages (master)
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git checkout -b gh-pages
          ./gradlew publish # 這裡假設你有一個 publish 任務來處理部署
          git push -f origin gh-pages:master
