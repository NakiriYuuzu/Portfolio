name: Deploy Test

on:
  push:
    branches:
      - develop

jobs:
#  test-and-deploy:
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/develop'
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'zulu'
#          java-version: 17
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#
#      - name: Clean dependency
#        run: ./gradlew clean --daemon
#
#      - name: Run tests
#        run: ./gradlew test --stacktrace --daemon
#
#      - name: Build WasmJs
#        run: ./gradlew wasmJsBrowserDistribution --daemon
#
#      - name: Build Js
#        run: ./gradlew jsBrowserDistribution --daemon
#
#      - name: Setup Git Config
#        run: |
#          git config --global user.name 'github-actions'
#          git config --global user.email 'github-actions@github.com'
#
#      - name: Deploy to GitHub Pages (test)
#        if: success()
#        run: |
#          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
#          mkdir -p out/js out/wasmJs
#          cp -r kotlin-js-template/* out/
#          cp -r composeApp/build/dist/js/productionExecutable/* out/js/
#          cp -r composeApp/build/dist/wasmJs/productionExecutable/* out/wasmJs/
#          cd out
#          git init
#          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
#          git checkout -b test
#          git add .
#          git commit -m "Deploy to GitHub Pages (test)"
#          git push -f origin test

  update-release:
    runs-on: ubuntu-latest
#    needs: test-and-deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git Config
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git config pull.rebase false

      - name: Check Release Branch
        run: git checkout release || git checkout -b release

      - name: Pull latest changes from release
        run: git pull origin release

      - name: Merge develop into release
        run: |
          git merge develop --allow-unrelated-histories
          git push origin release

  create_pull-request:
    runs-on: ubuntu-latest
    needs: update-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git Config
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release
          base: master
          title: 'Merge develop into master'
          body: 'Auto-generated PR to merge changes from develop to master.'
          always-create: true